{"ast":null,"code":"var _jsxFileName = \"/home/chemelil/Bank-of-Flatiron/src/components/AddTransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTransactionForm({\n  transactions,\n  setTransactions\n}) {\n  _s();\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newTransaction = {\n      id: transactions.length + 1,\n      // In a real app, this would be generated by the backend\n      description,\n      amount: parseFloat(amount),\n      category\n    };\n    setTransactions([...transactions, newTransaction]);\n    setDescription('');\n    setAmount('');\n    setCategory('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"Amount\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      placeholder: \"Category\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTransactionForm, \"yl33cHqxLALu6qhELj7wy9GDFW4=\");\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTransactionForm","transactions","setTransactions","_s","description","setDescription","amount","setAmount","category","setCategory","handleSubmit","e","preventDefault","newTransaction","id","length","parseFloat","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chemelil/Bank-of-Flatiron/src/components/AddTransactionForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AddTransactionForm({ transactions, setTransactions }) {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: transactions.length + 1, // In a real app, this would be generated by the backend\n      description,\n      amount: parseFloat(amount),\n      category,\n    };\n    setTransactions([...transactions, newTransaction]);\n    setDescription('');\n    setAmount('');\n    setCategory('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder=\"Description\"\n        required\n      />\n      <input\n        type=\"number\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        placeholder=\"Amount\"\n        required\n      />\n      <input\n        type=\"text\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        placeholder=\"Category\"\n        required\n      />\n      <button type=\"submit\">Add Transaction</button>\n    </form>\n  );\n}\n\nexport default AddTransactionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,kBAAkBA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,cAAc,GAAG;MACrBC,EAAE,EAAEb,YAAY,CAACc,MAAM,GAAG,CAAC;MAAE;MAC7BX,WAAW;MACXE,MAAM,EAAEU,UAAU,CAACV,MAAM,CAAC;MAC1BE;IACF,CAAC;IACDN,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEY,cAAc,CAAC,CAAC;IAClDR,cAAc,CAAC,EAAE,CAAC;IAClBE,SAAS,CAAC,EAAE,CAAC;IACbE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEV,OAAA;IAAMkB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,WAAY;MACnBiB,QAAQ,EAAGV,CAAC,IAAKN,cAAc,CAACM,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAChDG,WAAW,EAAC,aAAa;MACzBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MACEoB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEd,MAAO;MACde,QAAQ,EAAGV,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC3CG,WAAW,EAAC,QAAQ;MACpBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGV,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,UAAU;MACtBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEX;AAACzB,EAAA,CA7CQH,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AA+C3B,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}